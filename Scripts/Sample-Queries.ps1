#
# Sample scripts for 'Posh-Shodan'
#
# Generated by: Dan Borges <ahhh.db@gmail.com>
#
# Generated on: 11/29/2015
#
# Description: Sample queries to give people ideas
#

## Functions
# Parse our results in a cleaner way, prints top 10 results
function Write-GeneralParse
{
    [CmdletBinding()]
    Param
    (
        [Parameter(Mandatory=$true, Position=0)]
        $results
    )
    
    Write-Host 'Top ten results:'
    foreach ($result in $($results.matches | Select -First 10))
    {
        Write-Output ""
        Write-Output "IP: $($result.ip_str)"
        Write-Output "Port: $($result.port)"
        Write-Output "Domain: $($result.domains)" 	
        Write-Output "Organization: $($result.org)"
        Write-Output "Location $($result.location)"
        Write-Output "Time: $($result.timestamp)"
        Write-Output "Product $($result.product)"
        Write-Output "Protocol $($result.transport)"
        Write-Output "Shodan Method Used: $($result._shodan)"
        Write-Output "Data: $($result.data)"
        Write-Output ""
    }
}

# Message of the day function (Cost 1 token!)
function Search-MOTD()
{
    # Query
    $results = Search-ShodanHost -page 1 -Port 17
    
    # Selectively print our results
    Write-Host 'Top ten results:'
    foreach ($result in $($results.matches | Select -First 10))
    {
        Write-Output ""
        Write-Output "IP: $($result.ip_str)"
        Write-Output "Time: $($result.timestamp)"
        Write-Output "Organization: $($result.org)"
        Write-Output "Data: $($result.data)"
        Write-Output ""
    }

    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'  
}

# Simple SCADA search
function Search-SimpleSCADA()
{
    # Make Query for Simatic
    $results = Search-ShodanHost -page 1 -Query "simatic"
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'
}

# Simple webmin search
function Search-SimpleWebmin()
{
    # Make Query for webmin
    $results = Search-ShodanHost -page 1 -Query "webmin" # -Port 10000
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'  
}

# Simple SIP / VOIP search
function Search-SimpleSIP()
{
    # Make Query for sip / voip endpoints
    $results = Search-ShodanHost -page 1 -Query "sip" # -Port 5060
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'
}

# Simple netcam / belkin webcam search
function Search-SimpleNetcam()
{
    # Make Query for netcam / belkin webcam endpoints
    $results = Search-ShodanHost -page 1 -Query "netcam" # -Port 49153
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'  
}

# Simple airlink / camera web server search
function Search-SimpleAirlink()
{
    # Make Query for airlink / camera web server endpoints
    $results = Search-ShodanHost -page 1 -Query "Camera Web Server" # -Port 80,81,82,83,84
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'
}

# Simple hfs file server search
function Search-SimpleHFS()
{
    # Make Query for hfs file server endpoints
    $results = Search-ShodanHost -page 1 -Query "hfs" 
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'
}

# Simple Bluecoat / proxysg search
function Search-SimpleProxySG()
{
    # Make Query for bluecoat proxysg endpoints
    $results = Search-ShodanHost -page 1 -Query "proxysg" 
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'
}

# Simple Netgear router search
function Search-SimpleNetgear()
{
    # Make Query for Netgear router endpoints
    $results = Search-ShodanHost -page 1 -Query "netgear" 
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'
}

# Simple Android Webcam Server search
function Search-SimpleAndroidCam()
{
    # Make Query for Android Webcam Server endpoints
    $results = Search-ShodanHost -page 1 -Query "Android Webcam Server" 
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json' 
}

# Simple Anonymous login successful search, nets ftp and file shares
function Search-SimpleAnonymousAccess()
{
    # Make Query for Anonymous login successful
    $results = Search-ShodanHost -page 1 -Query "Anonymous login successful" 
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'
}

# Simple vnc server search (Cost 1 token!)
function Search-SimpleVNC()
{
    # Make Query for vnc server endpoints
    $results = Search-ShodanHost -page 1 -Port 5900
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'
}

# Simple Bitcoin server search (Cost 1 token!)
function Search-SimpleBitcoin()
{
    # Make Query for Bitcoin server endpoints
    $results = Search-ShodanHost -page 1 -Port 8333
    
    # General Top 10 print our results
    Write-GeneralParse $results
    
    # Save results to file
    $results.matches | ConvertTo-Json > '.\sample-query-results.json'
    Write-Host 'Full result set saved to: .\sample-query-results.json'
}

Write-Host 'Select a sample script! (Some cost tokens)'
Write-Host '1) Message of the Day (Cost one token!)'
Write-Host '2) Siemans SCADA Search'
Write-Host '3) Webmin Panel Search'
Write-Host '4) VOIP / SIP Search'
Write-Host '5) Belkin Netcam Search'
Write-Host '6) Airlink Camera Web Server Search'
Write-Host '7) Android Web Cam Server Search'
Write-Host '8) HFS File Server Search'
Write-Host '9) Bluecoat / ProxySG Search'
Write-Host '10) Netgear Router Search'
Write-Host '11) Anonymous Server Access Search'
Write-Host '12) VNC Server Search (Cost one token!)'
Write-Host '13) Bitcoin Server Search (Cost one token!)'
$Query = Read-Host -Prompt 'Select a sample query: '

switch($Query)
{
    1{Search-MOTD}
    2{Search-SimpleSCADA}
    3{Search-SimpleWebmin}
    4{Search-SimpleSIP}
    5{Search-SimpleNetcam}
    6{Search-SimpleAirlink}
    7{Search-SimpleAndroidCam}
    8{Search-SimpleHFS}
    9{Search-SimpleProxySG}
    10{Search-SimpleNetgear}
    11{Search-SimpleAnonymousAccess}
    12{Search-SimpleVNC}
    13{Search-SimpleBitcoin}
}
